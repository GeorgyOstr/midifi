var fluid: FluidData;

gen error_msg: unit -> string = '::std::string(strerror(errno))';
fun /(l: string, r: string) => Filename::join (l, r);

object RootWindow() = {
    midi := #MidiFile::MidiFile;
    path := '/home/ryan/Documents/piano_req.midi.mid';
    this := Filename::dirname$ System::argv 0;
    if System::argc == 2 perform
        path = System::argv 1;

    if midi.read path == 0 do
        eprintln$ f"Error opening %S: %S" (path, #error_msg);
        System::exit 1;
    done

    // XXX: Custom soundfonts should probably be an option.
    fluid = FluidData (path, this/'data'/'FluidR3_GM.sf2', midi.tpq);
    ps := PlayerScreen (midi, fluid.deltatime.float);

    w := RenderWindow (values.video_mode, 'midifi');

    method proc run() {
        fluid.play;

        while w.isopen do
            var event: Event;
            while w.poll_event &event perform
                if event.type == EventType::Closed do
                    w.close;
                    return;
            done

            if not fluid.playing do
                w.close;
                return;
            done

            w.clear values.gray_color;
            draw_onto (ps, w);
            w.display;
        done
    }
}
